##################################################################################################
# 									Variables to fill
##################################################################################################

<#
Set there when to display the alert, 
If the free space perdent on the disk is below alue in variable $Percent_Alert the notification will be displayed
#>
$Percent_Alert = 20

#***********************************************************
# HTML Report part
#***********************************************************

# Choose what to display in the HTML user report: True or False
$Show_Large_Folder_From_Users = $True
$Show_Large_Folders_From_C = $True
$Show_Large_Files_From_C = $True
$Show_OneDrive_Redirection = $True
$Show_OneDrive_Size = $True
$Show_Keep_OnDevice_Alert = $True

# Choose the way to add your logo to the user report
$Use_a_logo = $True # True or False
# If $Use_a_logo = True
$Report_Logo_Mode = "Base64" # Base64 or Download
# If Download mode
$Report_Logo_Path = ""
# If Base64 mode
$Report_Logo_Picture_Base64 = ""

#***********************************************************
# HTML Report part
#***********************************************************



#***********************************************************
# Toast notif part
#***********************************************************

# Choose the way to add a picture in the toast: two ways base64 and download from web like blob storage
$Toast_Picture_Mode = "Base64" # Base64 or Download
# If Download mode
$Toast_Logo_Path = ""
# If Base64 mode
# To convert a picture like png to base64 use the below code and copy value in variable $Picture_Base64:
# $PNG_Path = <Path of your png>
# [System.Convert]::ToBase64String([System.IO.File]::ReadAllBytes("$PNG_Path")); 
$Picture_Base64 = ""

# Toast text abd buttons info
$Use_Good_Pratices_Btn = $True # Choose to display the "See good practices" button
# If $Use_Good_Pratices_Btn = True, add the link of the good pratices link, on the web
$Good_Pratices_Link = ""
$Toast_Title = "You have less than $Percent_Alert % of disk space left on your disk"
$Toast_Message = "To ensure the stability and proper functioning of your system, please consider deleting data no longer needed, uninstalling applications no longer used and archiving data to OneDrive."
$Toast_Button1_Text = "See good practices" # Text to display in the first button, if $Use_Good_Pratices_Btn = True
$Toast_Button2_Text = "See larger content" # Text to display in the second button
$Toast_Button1_Explanation_Text = "Click on «$Toast_Button1_Text» to understand how to save space on your disk."
$Toast_Button2_Explanation_Text = "Click «$Toast_Button2_Text» to list which folder(s) and file(s) take a lot of space on your disk."
$Toast_Attribution = "University of Surrey"
$Text_AppName = "Low Disk Space Warning"

#***********************************************************
# Toast notif part
#***********************************************************


##################################################################################################
# 									Variables to fill
##################################################################################################



Function Register-NotificationApp($AppID,$AppDisplayName) {
    [int]$ShowInSettings = 0
    $AppRegPath = "HKCU:\Software\Classes\AppUserModelId"
    $RegPath = "$AppRegPath\$AppID"
	
	$Notifications_Reg = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings'
	If(!(Test-Path -Path "$Notifications_Reg\$AppID")) 
		{
			New-Item -Path "$Notifications_Reg\$AppID" -Force
			New-ItemProperty -Path "$Notifications_Reg\$AppID" -Name 'ShowInActionCenter' -Value 1 -PropertyType 'DWORD' -Force
		}

	If((Get-ItemProperty -Path "$Notifications_Reg\$AppID" -Name 'ShowInActionCenter' -ErrorAction SilentlyContinue).ShowInActionCenter -ne '1') 
		{
			New-ItemProperty -Path "$Notifications_Reg\$AppID" -Name 'ShowInActionCenter' -Value 1 -PropertyType 'DWORD' -Force
		}	
		
    try {
        if (-NOT(Test-Path $RegPath)) {
            New-Item -Path $AppRegPath -Name $AppID -Force | Out-Null
        }
        $DisplayName = Get-ItemProperty -Path $RegPath -Name DisplayName -ErrorAction SilentlyContinue | Select-Object -ExpandProperty DisplayName -ErrorAction SilentlyContinue
        if ($DisplayName -ne $AppDisplayName) {
            New-ItemProperty -Path $RegPath -Name DisplayName -Value $AppDisplayName -PropertyType String -Force | Out-Null
        }
        $ShowInSettingsValue = Get-ItemProperty -Path $RegPath -Name ShowInSettings -ErrorAction SilentlyContinue | Select-Object -ExpandProperty ShowInSettings -ErrorAction SilentlyContinue
        if ($ShowInSettingsValue -ne $ShowInSettings) {
            New-ItemProperty -Path $RegPath -Name ShowInSettings -Value $ShowInSettings -PropertyType DWORD -Force | Out-Null
        }
    }
    catch {}
}



Function Format_Size
	{
		param(
		$size	
		)	
		If($null -eq $size){$FormatedSize = "0"}
		ElseIf( $size -lt 1KB ){$FormatedSize = "$("{0:N2}" -f $size) B"}
		ElseIf( $size -lt 1MB ){$FormatedSize = "$("{0:N2}" -f ($size / 1KB)) KB"}
		ElseIf( $size -lt 1GB ){$FormatedSize = "$("{0:N2}" -f ($size / 1MB)) MB"}
		ElseIf( $size -lt 1TB ){$FormatedSize = "$("{0:N2}" -f ($size / 1GB)) GB"}
		ElseIf( $size -lt 1PB ){$FormatedSize = "$("{0:N2}" -f ($size / 1TB)) TB"}
		return $FormatedSize
	}

add-type -type  @"
	using System;
	using System.Runtime.InteropServices;
	using System.ComponentModel;
	using System.IO;
	namespace Disk
	{
		public class Size
		{				
			[DllImport("kernel32.dll")]
			static extern uint GetCompressedFileSizeW([In, MarshalAs(UnmanagedType.LPWStr)] string lpFileName,
			out uint lpFileSizeHigh);
						
			public static ulong SizeOnDisk(string filename)
			{
			  uint High_Order;
			  uint Low_Order;
			  ulong GetSize;
			  FileInfo CurrentFile = new FileInfo(filename);
			  Low_Order = GetCompressedFileSizeW(CurrentFile.FullName, out High_Order);
			  int GetError = Marshal.GetLastWin32Error();
			 if (High_Order == 0 && Low_Order == 0xFFFFFFFF && GetError != 0)
				{
					throw new Win32Exception(GetError);
				}
			 else 
				{ 
					GetSize = ((ulong)High_Order << 32) + Low_Order;
					return GetSize;
				}
			}
		}
	}
"@

Function OD_SizeOnDisk
	{
		param(
		$Folder_to_check	
		)	

		$Get_All_Files = Get-ChildItem $Folder_to_check -recurse -ea silentlycontinue | Where-Object {! $_.PSIsContainer}
		If($Get_All_Files.Count -gt 0)
			{
				$OD_Files_Array = @()
				ForEach($File in $Get_All_Files)  
					{
						If((test-path $File.FullName))
							{
								$SizeOnDisk = [Disk.Size]::SizeOnDisk($File.FullName) 	
								If($Files_Size)
									{
										$OD_Obj = New-Object PSObject
										Add-Member -InputObject $OD_Obj -MemberType NoteProperty -Name "File name" -Value $File.Name
										Add-Member -InputObject $OD_Obj -MemberType NoteProperty -Name "Path" -Value $File.DirectoryName	
										Add-Member -InputObject $OD_Obj -MemberType NoteProperty -Name "Size" -Value $File.Length
										Add-Member -InputObject $OD_Obj -MemberType NoteProperty -Name "Size on Disk" -Value $SizeOnDisk
										$OD_Files_Array += $OD_Obj					
									}
								
								$total_SizeOnSisk +=  $SizeOnDisk
								$total_size +=  $File.Length
								
								$Log_Analytics_TotalSize = ([System.Math]::Round(($total_size) / 1MB, 2))						
								$Log_Analytics_SizeOnSisk = ([System.Math]::Round(($total_SizeOnSisk) / 1MB, 2))
								
								$Return_Array = $total_size, $total_SizeOnSisk, $Log_Analytics_TotalSize, $Log_Analytics_SizeOnSisk
							}
					}
				return $Return_Array				
			}	
		Else
			{
				return 0
			}
	}
	
	
Function Check_Folder_Size
	{
		param(
		$Folder_Path		
		)	
		
		If (test-path $Folder_Path)
			{
				Try
					{
						$Get_Folder_Size = (Get-ChildItem $Folder_Path -recurse -file -ea silentlycontinue -ErrorVariable err | measure-object -property length -sum).sum
					}
				Catch 
					{					
						$_.Exception.ToString()
						$Global:LastExitCode = 1
					}			

				If ($null -eq $Get_Folder_Size)
					{
						$folderSizeOutput = "0"
					}ElseIf ( $Get_Folder_Size -lt 1KB ) 
					{ 
						$folderSizeOutput = "$("{0:N2}" -f $Get_Folder_Size) B" 
					}ElseIf ( $Get_Folder_Size -lt 1MB ) 
					{ 
						$folderSizeOutput = "$("{0:N2}" -f ($Get_Folder_Size / 1KB)) KB" 
					}ElseIf ( $Get_Folder_Size -lt 1GB ) 
					{ 
						$folderSizeOutput = "$("{0:N2}" -f ($Get_Folder_Size / 1MB)) MB" 
					}ElseIf ( $Get_Folder_Size -lt 1TB ) 
					{ 
						$folderSizeOutput = "$("{0:N2}" -f ($Get_Folder_Size / 1GB)) GB" 
					}ElseIf ( $Get_Folder_Size -lt 1PB ) 
					{ 
						$folderSizeOutput = "$("{0:N2}" -f ($Get_Folder_Size / 1TB)) TB" 
					}ElseIf ( $Get_Folder_Size -ge 1PB ) 
					{ 
						$folderSizeOutput = "$("{0:N2}" -f ($Get_Folder_Size / 1PB)) PB" 
					}	
								
				$Global:Full_Folder_Size = New-Object -TypeName psobject
				$Full_Folder_Size | Add-Member -MemberType NoteProperty -Name Size_Formated -Value $folderSizeOutput
				$Full_Folder_Size | Add-Member -MemberType NoteProperty -Name Size_Normal  -Value $Get_Folder_Size					
			}
		Else
			{
				write-host "Can not find the folder $Folder_Path" 									
			}		
		Return $Full_Folder_Size
	}	
	


# Get Hard disk size info
$Win32_LogicalDisk = Get-ciminstance Win32_LogicalDisk | Where-Object {$_.DeviceID -eq "C:"}
$Disk_Full_Size = $Win32_LogicalDisk.size
$Disk_Free_Space = $Win32_LogicalDisk.Freespace
$Total_size_NoFormat = [Math]::Round(($Disk_Full_Size))
$Free_size_formated = Format_Size -size $Disk_Free_Space
$Total_size_formated = Format_Size -size $Disk_Full_Size
[int]$Free_Space_percent = '{0:N0}' -f (($Disk_Free_Space / $Disk_Full_Size * 100),1)
$Disk_Size_Status = @(
       [pscustomobject]@{"Total size"=$Total_size_formated;"Free space"=$Free_size_formated}
   )


# Get OneDrive full size and size on disk
$OD_Path = (Get-ItemProperty "HKCU:\SOFTWARE\Microsoft\OneDrive\Accounts\Business1").UserFolder
$Documents_Path = [System.Environment]::GetFolderPath("MyDocuments")
$Desktop_Path = [System.Environment]::GetFolderPath("Desktop")
$Pictures_Path = [System.Environment]::GetFolderPath("MyPictures")

If($Show_OneDrive_Redirection -eq $True)
	{
		$Redirection_Status = @(
			   [pscustomobject]@{Folder='Documents';Location=$Documents_Path}
			   [pscustomobject]@{Folder='Desktop'; Location=$Desktop_Path}
			   [pscustomobject]@{Folder='Pictures'; Location=$Pictures_Path}
		   )		   		
	}

If($Show_Keep_OnDevice_Alert -eq $True)
	{
		$Get_OD_Attribute = (Get-Item $OD_Path).Attributes
		If(($Get_OD_Attribute -eq 525360) -or ($Get_OD_Attribute -like "525*"))
			{
				$Always_Keep_device = "Oui"
			}
		Else
			{
				$Always_Keep_device = "Non"
			}
	}


# Get larger folders from C:\Users
# If($Show_Large_Folder_From_Users -eq $True)
	# {
		# $MostWanted_Folders_Users = @()
		# $Get_Users_Directories = Get-ChildItem "C:\users" -Directory -Recurse
		# ForEach($Directory in $Get_Users_Directories)
			# {
				# $Dir_FullName = $Directory.FullName
				# $Directory_Size_OnDisk = (OD_SizeOnDisk -Folder_to_check $Dir_FullName)[1]	
				# $Directory_Formated_Size = Format_Size -size $Directory_Size_OnDisk		
				# If($Directory_Size_OnDisk -gt 0)
					# {
						# $Obj = New-Object PSObject
						# Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Location" -Value $Dir_FullName	
						# Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Size" -Value $Directory_Formated_Size
						# Add-Member -InputObject $Obj -MemberType NoteProperty -Name "FullSize" -Value $Directory_Size_OnDisk				
						# $MostWanted_Folders_Users += $Obj				
					# }		
			# }
		# $Top_10_Folders_Users = $MostWanted_Folders_Users | Sort-Object -Property FullSize -Descending | Select-Object Location, Size -First 20
	# }
	
$MostWanted_Folders_Users = @()	
$Current_User_Profile = Get-ChildItem Registry::\HKEY_USERS -ea silentlycontinue | Where-Object { Test-Path "$($_.pspath)\Volatile Environment" } | ForEach-Object { (Get-ItemProperty "$($_.pspath)\Volatile Environment").USERPROFILE }
$Get_Users_Directories = Get-ChildItem $Current_User_Profile -Directory -Recurse -ea silentlycontinue
ForEach($Directory in $Get_Users_Directories)
	{
		$Dir_FullName = $Directory.FullName
		$Directory_Size_OnDisk = (OD_SizeOnDisk -Folder_to_check $Dir_FullName)[1]	
		$Directory_Formated_Size = Format_Size -size $Directory_Size_OnDisk		
		If($Directory_Size_OnDisk -gt 0)
			{
				$Obj = New-Object PSObject
				Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Emplacement" -Value $Dir_FullName	
				Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Taille" -Value $Directory_Formated_Size
				Add-Member -InputObject $Obj -MemberType NoteProperty -Name "FullSize" -Value $Directory_Size_OnDisk				
				$MostWanted_Folders_Users += $Obj				
			}		
	}
$Top_10_Folders_Users = $MostWanted_Folders_Users | Sort-Object -Property FullSize -Descending | Select-Object Emplacement, Taille -First 20
	
$OD_Path = (Get-ItemProperty "HKCU:\SOFTWARE\Microsoft\OneDrive\Accounts\Business1").UserFolder 	
# $Get_Local_Content = Get-ChildItem "C:\" -Recurse -Force -ea silentlycontinue | Where-Object{(($_.fullname -notlike "*$OD_Path*"))}
$Get_Local_Content = Get-ChildItem "C:\" -Recurse -Force -ea silentlycontinue | Where-Object{(($_.fullname -notlike "*OneDrive - METSYS*"))}
$Get_Local_Content_Size = ($Get_Local_Content  | Measure-Object -Property Length -Sum).Sum 2> $null
$Local_Content_Formated_Size = Format_Size -size $Get_Local_Content_Size	
[int]$Local_Content_percent = '{0:N0}' -f (($Get_Local_Content_Size / $Disk_Full_Size * 100),1)	
	


# Get larger folders from C:
If($Show_Large_Folders_From_C -eq $True)
	{		
		$MostWanted_Folders_C = @()
		$Get_C_Directories = Get-ChildItem "C:\" | Where-Object{(($_.PSIsContainer) -and ($_.name -ne "Users"))}
		foreach ($Directory in $Get_C_Directories)
			{
				$Dir_Name = $Directory.FullName
				$Folder_Size = (Get-ChildItem $Dir_Name -Recurse -Force | Measure-Object -Property Length -Sum).Sum 2> $null						
				If($Folder_Size -gt 0)
					{
						$Formated_Size = Format_Size -size $Folder_Size									
						$Obj = New-Object PSObject
						Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Location" -Value $Dir_Name	
						Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Size" -Value $Formated_Size
						$MostWanted_Folders_C += $Obj		
					}
			}			
		$Top_10_Folders_C = $MostWanted_Folders_C | Sort-Object -Property FullSize -Descending | Select-Object Location, Size -First 10	
	}


# Get larger files in C:
If($Show_Large_Files_From_C -eq $True)
	{		
		$Get_Large_Files = Get-ChildItem c:\ -recurse  -ea silentlycontinue | Sort-Object -descending -property length | Select-Object -first 20 name, length, fullname
		$Big_Files = @()
		ForEach($File in $Get_Large_Files)
			{
				$File_Name = $File.name	
				$Full_Path = $File.fullname			
				$Formated_Size = Format_Size -size $File.length
				
				$Obj = New-Object PSObject
				Add-Member -InputObject $Obj -MemberType NoteProperty -Name "File" -Value $File_Name	
				Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Full path" -Value $Full_Path			
				Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Size" -Value $Formated_Size
				$Big_Files += $Obj				
			}	
	}

# Get onedrive size and size on disk
If($Show_OneDrive_Size -eq $True)
	{		
		$OD_Main_Size = (OD_SizeOnDisk -Folder_to_check $OD_Path)
		$OD_FullSize = $OD_Main_Size[0]
		$OD_SizeDisk = $OD_Main_Size[1]	
		$Formated_OD_FullSize = Format_Size -size $OD_FullSize
		$Formated_OD_SizeOnDisk = Format_Size -size $OD_SizeDisk
		$ODUsedSpaceOnDisk = [Math]::round((($OD_SizeDisk/$Disk_Full_Size) * 100),2)

		$OD_Documents_Size = (OD_SizeOnDisk -Folder_to_check $Documents_Path)
		$OD_Documents_FullSize = $OD_Documents_Size[0]	
		$Formated_Documents_Size = Format_Size -size $OD_Documents_FullSize		
		$Get_OD_Documents_SizeOnDisk = $OD_Documents_Size[1]
		$Formated_Documents_SizeOnDisk = Format_Size -size $Get_OD_Documents_SizeOnDisk		

		$OD_Desktop_Size = (OD_SizeOnDisk -Folder_to_check $Desktop_Path)	
		$OD_Desktop_FullSize = $OD_Desktop_Size[0]		
		$Formated_Desktop_Size = Format_Size -size $OD_Desktop_FullSize
		$Get_OD_Desktop_SizeOnDisk = $OD_Desktop_Size[1]
		$Formated_Desktop_SizeOnDisk = Format_Size -size $Get_OD_Desktop_SizeOnDisk

		$OD_Pictures_Size = (OD_SizeOnDisk -Folder_to_check $Pictures_Path)
		$OD_Pictures_FullSize = $OD_Pictures_Size[0]		
		$Formated_Pictures_Size = Format_Size -size $OD_Pictures_FullSize
		$Get_OD_Pictures_SizeOnDisk = $OD_Pictures_Size[1]
		$Formated_Pictures_SizeOnDisk = Format_Size -size $Get_OD_Pictures_SizeOnDisk		

		$OneDrive_Size_Status = @(
			   [pscustomobject]@{Dossier='OneDrive root';"Total size"=$Formated_OD_FullSize;"Size on disk"=$Formated_OD_SizeOnDisk}
			   [pscustomobject]@{Dossier='Documents';"Total size"=$Formated_Documents_Size;"Size on disk"=$Formated_Documents_SizeOnDisk}
			   [pscustomobject]@{Dossier='Desktop';"Total size"=$Formated_Desktop_Size;"Size on disk"=$Formated_Desktop_SizeOnDisk}
			   [pscustomobject]@{Dossier='Pictures';"Total size"=$Formated_Pictures_Size;"Size on disk"=$Formated_Pictures_SizeOnDisk}	   
		   )	
	}


$Total_size_full = $Disk_Full_Size
$Free_Space = $Disk_Free_Space

# Get data from temp and downloads
$Global:Download_Path = (get-itemproperty "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders")."{374DE290-123F-4565-9164-39C4925E467B}"
$Global:download_size = (Check_Folder_Size -Folder_Path $Download_Path)
$Global:download_size_Normal = $download_size.Size_Normal
$Global:download_size_Formated = $download_size.Size_Formated
[int]$Global:download_Used_Size = '{0:N0}' -f (($download_size_Normal / $Total_size_full * 100),1)

$Global:Windows_temp = (Check_Folder_Size -Folder_Path "c:\windows\temp").Size_Normal
$Global:User_temp = (Check_Folder_Size -Folder_Path "$env:temp").Size_Normal
$Global:Software_Distrib = (Check_Folder_Size -Folder_Path "C:\Windows\SoftwareDistribution").Size_Normal
If(test-path "c:\windows.old")
	{
		$Global:Windows_Old = (Check_Folder_Size -Folder_Path "c:\windows.old").Size_Normal
		$Global:Total_Temp_Files = $Windows_temp + $User_temp + $Software_Distrib + $Windows_Old		
	}
Else
	{
		$Global:Total_Temp_Files = $Windows_temp + $User_temp + $Software_Distrib 	
	}
[int]$Global:Temp_Files_Used_Size = '{0:N0}' -f (($Total_Temp_Files / $Total_size_full * 100),1)		

	
# [int]$Global:OneDrive_UsedSize_OnDisk = '{0:N0}' -f (($OD_SizeDisk / $Total_size_full * 100),1)			
# [int]$Global:Free_Space_Used_Size = '{0:N0}' -f (($Free_Space / $Total_size_full * 100),1)				

# If(test-path "C:\Windows\CCM\CCMCache")
	# {
		# [int]$Global:CCMCache_Used_Size = '{0:N0}' -f (($CCMCache_size_Normal / $Total_size_full * 100),1)		
	# }
	

If ($null -eq $Total_Temp_Files)
{
	$Global:TempSizeOutput = "0"
}ElseIf ( $Total_Temp_Files -lt 1KB ) 
{ 
	$Global:TempSizeOutput = "$("{0:N2}" -f $Total_Temp_Files) B" 
}ElseIf ( $Total_Temp_Files -lt 1MB ) 
{ 
	$Global:TempSizeOutput = "$("{0:N2}" -f ($Total_Temp_Files / 1KB)) KB" 
}ElseIf ( $Total_Temp_Files -lt 1GB ) 
{ 
	$Global:TempSizeOutput = "$("{0:N2}" -f ($Total_Temp_Files / 1MB)) MB" 
}ElseIf ( $Total_Temp_Files -lt 1TB ) 
{ 
	$Global:TempSizeOutput = "$("{0:N2}" -f ($Total_Temp_Files / 1GB)) GB" 
}ElseIf ( $Total_Temp_Files -lt 1PB ) 
{ 
	$Global:TempSizeOutput = "$("{0:N2}" -f ($Total_Temp_Files / 1TB)) TB" 
}ElseIf ( $Total_Temp_Files -ge 1PB ) 
{ 
	$Global:TempSizeOutput = "$("{0:N2}" -f ($Total_Temp_Files / 1PB)) PB" 
}		


$Other_full_size = $Total_size_full - $Free_Space - $OD_SizeDisk - $Total_Temp_Files - $download_size_Normal	
$Global:Other_full_size_Percent = '{0:N0}' -f (($Other_full_size / $Total_size_full * 100),1)	
$Global:Formated_Other_full_size = (Format_Size -size $Other_full_size)	






$Disk_Size_Status = @(
       [pscustomobject]@{"Full size"=$Total_size_formated;"Local datas size"=$Local_Content_Formated_Size;"OneDrive"=$Formated_OD_SizeOnDisk;"Free space"=$Free_size_formated}
   )

$Disk_Size_Status_Percent = @(
       [pscustomobject]@{"Full size"=$Total_size_formated;"Local datas size"=$Local_Content_percent;"OneDrive"=$ODUsedSpaceOnDisk;"Free space"=$Free_Space_percent}
   )



# $Pie_Chart_Path = "$env:temp\piechart.png"
$Disk_Size_Pie = "$env:temp\Disk_Size_Pie.png"

Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Windows.Forms.DataVisualization

# Chart full disk
$DataArray = @{"Loca datas"=$Local_Content_percent; "OneDrive size on disk"=$ODUsedSpaceOnDisk; "Free space"=$Free_Space_percent}

$Chart = New-object System.Windows.Forms.DataVisualization.Charting.Chart

# $Chart.Width = 700
$Chart.Width = 650
$Chart.Height = 200

# chart colour palette (must match data array order)
$chart.Palette = [System.Windows.Forms.DataVisualization.Charting.ChartColorPalette]::None
$Chart.PaletteCustomColors = @( [System.Drawing.Color]::Brown,  [System.Drawing.Color]::Gold, [System.Drawing.Color]::Red, [System.Drawing.Color]::Green )
$Chart.PaletteCustomColors = @( "#4472c4", "#ed7d31", "#a5a5a5")

# create a chartarea to draw on and add to chart
$ChartArea = New-Object System.Windows.Forms.DataVisualization.Charting.ChartArea

$Chart.ChartAreas.Add($ChartArea)
$ChartArea.Area3DStyle.Enable3D=$True
$ChartArea.Area3DStyle.Inclination = 0

# add data to chart
[void]$Chart.Series.Add("Data")

$chart.Series["Data"].ChartType = "Pie"
$Chart.Series["Data"]["PieLabelStyle"] = "Outside"

$Chart.Series["Data"]["PieLineColor"] = "Black"
$Chart.Series["Data"]["PieDrawingStyle"] = "Default"
$Chart.Series["Data"].Points.DataBindXY($DataArray.Keys, $DataArray.Values)
$Chart.Series['Data'].Label = "#VALX (#VALY %)"

$Chart.SaveImage($Disk_Size_Pie, "PNG")










# Add-Type -AssemblyName System.Windows.Forms
# Add-Type -AssemblyName System.Windows.Forms.DataVisualization

$Local_Size_Pie = "$env:temp\Local_Size_Pie.png"

# Chart full disk
$Local_DataArray = @{"Other local datas"=$Other_full_size_Percent; "Temp files"=$Temp_Files_Used_Size; "Downloads folder"=$download_Used_Size}

$Chart2 = New-object System.Windows.Forms.DataVisualization.Charting.Chart

# $Chart.Width = 700
$Chart2.Width = 650
$Chart2.Height = 200

# chart colour palette (must match data array order)
$Chart2.Palette = [System.Windows.Forms.DataVisualization.Charting.ChartColorPalette]::None
$Chart2.PaletteCustomColors = @( [System.Drawing.Color]::Brown,  [System.Drawing.Color]::Gold, [System.Drawing.Color]::Red, [System.Drawing.Color]::Green )
$Chart2.PaletteCustomColors = @( "#4472c4", "#ed7d31", "#a5a5a5")

# create a chartarea to draw on and add to chart
$ChartArea2 = New-Object System.Windows.Forms.DataVisualization.Charting.ChartArea

$Chart2.ChartAreas.Add($ChartArea2)
$ChartArea2.Area3DStyle.Enable3D=$True
$ChartArea2.Area3DStyle.Inclination = 0

# add data to chart
[void]$Chart2.Series.Add("Data")

$Chart2.Series["Data"].ChartType = "Pie"
$Chart2.Series["Data"]["PieLabelStyle"] = "Outside"

$Chart2.Series["Data"]["PieLineColor"] = "Black"
$Chart2.Series["Data"]["PieDrawingStyle"] = "Default"
$Chart2.Series["Data"].Points.DataBindXY($Local_DataArray.Keys, $Local_DataArray.Values)
$Chart2.Series['Data'].Label = "#VALX (#VALY %)"

$Chart2.SaveImage($Local_Size_Pie, "PNG")





#**************************************************************************************************************************
# 													HTML USER REPORT PART
#**************************************************************************************************************************

$Temp = $env:temp
$ProgData = $env:PROGRAMDATA
$ComputerName = Get-Content env:computername
$Date = get-date
$HTML_DiskSize_Report = "$Temp\DiskSize_Report.html"

$CSS_Content = @'
body
{
	font-family: Arial;
	font-size: 8pt;
}
table
{
	border: 0px solid #e3e3e3;
	border-collapse: collapse;
}
tr:nth-child(even) 
{
	background: #f5f5f5;	
}
tr:nth-child(odd) 
{
	background: #f1f1f1;	
}
th, td 
{
	padding: 7px;
}
tr:hover
{
	background:#A1E5DC;
}
tr
{
	-webkit-transition: color 1s ease;
	-ms-transition: color 1s ease;
	-moz-transition: color 1s ease;
	-o-transition: color 1s ease;	
 }
 
th
{
	padding: 3px;
	background: #00a984;
	color: white;
	font-size: 13px;
	text-align:center;
	border: 1px solid #e3e3e3;		
}
td
{
	border: 1px solid #e3e3e3;
	padding: 5px;
	font-size: 11px;
	text-align:left;
}
.rowOne
{
	background: #f5f5f5;	
}
.rowTwo
{
	background: #f1f1f1
}
.titre_list
{
	color: #2d89ef;
	font-weight:bold;
	font-size:16pt;
	font-family: Segoe UI light, Arial;
}
.Alert_OneDrive_Yes
{
	color: red;
	font-weight:bold;
	font-size:10pt;
	font-family: Segoe UI light, Arial;
}
.subtitle
{
	font-family: Segoe UI Light, Arial;
	font-weight:bold;	
	font-size: 11pt;
	color:#009999;
}
.subtitle2
{
	font-family: Segoe UI Light, Arial;
	font-weight:bold;	
	font-size: 10pt;
	color:#009999;
}
.titre_categorie
{
	font-family: Segoe UI Light, Arial;
	font-weight:bold;	
	font-size: 13pt;
	color:#007fbd;
}
'@

$CSS_File  = "$env:temp\HTML_Export_CSS.css"
$CSS_Content | out-file "$env:temp\HTML_Export_CSS.css"  -Encoding "UTF8"

If($Use_a_logo -eq $True)
	{
		$User_Report_Logo_Path = "$env:temp\Report_logo.png"
		If($Report_Logo_Mode -eq "Base64")
			{
				[byte[]]$Bytes = [convert]::FromBase64String($Report_Logo_Picture_Base64)
				[System.IO.File]::WriteAllBytes($User_Report_Logo_Path,$Bytes)		
			}
		ElseIf($Report_Logo_Mode -eq "Download")
			{
				Invoke-WebRequest -Uri $Report_Logo_Path -OutFile $User_Report_Logo_Path 		
			}	

		If($Use_a_logo -eq $True)
			{
				$Picture = "<p style='text-align:center;'><img src=$User_Report_Logo_Path width='150'></p>"	
			}	
	}

$HTML_Title = "<p style='text-align:center;'><span class=titre_list>Larger content on your disk</span><br><span class=subtitle>Last update: $Date</span></p>"
# $Disk_Size_resume = "<p><span class=titre_categorie>Disk space usage (Free space percent: $Free_Space_percent %)</span></p>"

$Disk_Size_resume = "<p><span class=titre_categorie>Disk usage (Full size: $Total_size_formated, Free space: $Free_size_formated)</span></p>"


If($Show_Keep_OnDevice_Alert -eq $True)
	{
		# $Always_Keep_device = "oui"
		If($Always_Keep_device -eq "Oui")
			{
				$OneDrive_Always_Keep_device_Title = "<p><span class=Alert_OneDrive_Yes>Be careful, option Always keep on device is selected at OneDrive root. This may have an impact on your disk size.</span></p>"		
			}
	}
		
If($Show_Large_Folder_From_Users -eq $True)
	{
		$Title_Users_Folders = "<p><span class=titre_categorie>List of the 20 larger folders in $env:username profile</span></p>"
		$Top10_Folders_In_User = $Top_10_Folders_Users | ConvertTo-HTML -Fragment	
	}
	
If($Show_Large_Folders_From_C -eq $True)
	{
		$Title_C_Folders = "<p><span class=titre_categorie>List on larger folders on your disk</span></p>"
		$Top10_Folders_In_C = $Top_10_Folders_C | ConvertTo-HTML -Fragment
	}	
	
If($Show_Large_Files_From_C -eq $True)
	{
		$Title_Big_Files = "<p><span class=titre_categorie>List of larger files on your disk</span></p>"
		$Top_20_Large_Files = $Big_Files | ConvertTo-HTML -Fragment
	}	
	
If($Show_OneDrive_Redirection -eq $True)
	{
		$Redirection_Status_Title = "<p><span class=titre_categorie>OneDrive folders redirection status</span></p>"
		$Known_Folder_Redirection_Status = $Redirection_Status | ConvertTo-HTML -Fragment
	}	
	
If($Show_OneDrive_Size -eq $True)
	{
		$OneDrive_Size_Title = "<p><span class=titre_categorie>OneDrive usage (OneDrive size on disk percent: $ODUsedSpaceOnDisk %)</span></p>"
		$OneDrive_Size = $OneDrive_Size_Status | ConvertTo-HTML -Fragment
	}	

$Disk_Size = $Disk_Size_Status | ConvertTo-HTML -Fragment


# $Pie_Chart_Path = "$Pie_Chart_Path"
$Picture_Disk = "<img src=$Disk_Size_Pie>"
$Disk_Size_Legend = "* (OneDrive size on disk: $Formated_OD_SizeOnDisk, Local: $Local_Content_Formated_Size)"


# $Local_Size_Pie_Path = "$Local_Size_Pie"
$Local_Disk_Picture_Disk = "<img src=$Local_Size_Pie>"
$Disk_Size_Legend = "* (OneDrive size on disk: $Formated_OD_SizeOnDisk, Local: $Local_Content_Formated_Size)"


# ConvertTo-HTML  -body "$Picture $HTML_Title<br>$Disk_Size_resume $Disk_Size<br>$Redirection_Status_Title $Known_Folder_Redirection_Status<br>$OneDrive_Size_Title $OneDrive_Always_Keep_device_Title $OneDrive_Size<br>$Title_Users_Folders $Top10_Folders_In_User<br>$Title_C_Folders $Top10_Folders_In_C<br>$Title_Big_Files $Top_20_Large_Files" -CSSUri $CSS_File | Out-File -encoding ASCII $HTML_DiskSize_Report		

# ConvertTo-HTML  -body "$Picture $HTML_Title<br>$Disk_Size_resume $Disk_Used_Content<br>$Picture_Disk<br><span class=subtitle2><br>$Disk_Size_Legend</span><br><br>$Redirection_Status_Title $Known_Folder_Redirection_Status<br>$OneDrive_Always_Keep_device_Title<br>$Title_Users_Folders $Top10_Folders_In_User<br>$Title_C_Folders $Top10_Folders_In_C<br>$Title_Big_Files $Top_20_Large_Files" -CSSUri $CSS_File | Out-File -encoding ASCII $HTML_DiskSize_Report		
ConvertTo-HTML  -body "$Picture $HTML_Title<br>$Disk_Size_resume $Disk_Used_Content<br>$Picture_Disk<br><span class=subtitle2><br>$Disk_Size_Legend</span><br>$Local_Disk_Picture_Disk<br>$Redirection_Status_Title $Known_Folder_Redirection_Status<br>$OneDrive_Always_Keep_device_Title<br>$Title_Users_Folders $Top10_Folders_In_User<br>$Title_C_Folders $Top10_Folders_In_C<br>$Title_Big_Files $Top_20_Large_Files" -CSSUri $CSS_File | Out-File -encoding ASCII $HTML_DiskSize_Report		



#**************************************************************************************************************************
# 													HTML USER REPORT PART
#**************************************************************************************************************************









#**************************************************************************************************************************
# 													TOAST NOTIF PART
#**************************************************************************************************************************

$HeroImage = "$env:TEMP\HeroPicture.png"
If($Toast_Picture_Mode -eq "Base64")
	{
		[byte[]]$Bytes = [convert]::FromBase64String($Picture_Base64)
		[System.IO.File]::WriteAllBytes($HeroImage,$Bytes)		
	}
ElseIf($Toast_Picture_Mode -eq "Download")
	{
		Invoke-WebRequest -Uri $Toast_Logo_Path -OutFile $HeroImage 		
	}

$Title = $Toast_Title
$Message = $Toast_Message
$Button1_Text = $Toast_Button1_Text
$Button2_Text = $Toast_Button2_Text
$Button1_Explanation_Text = $Toast_Button1_Explanation_Text
$Button2_Explanation_Text = $Toast_Button2_Explanation_Text
$Attribution = $Toast_Attribution
$Scenario = 'reminder' 

If($Use_Good_Pratices_Btn -eq $True)
	{
[xml]$Toast = @"
<toast scenario="$Scenario">
    <visual>
    <binding template="ToastGeneric">
        <image placement="hero" src="$HeroImage"/>
        <text placement="attribution">$Attribution</text>
        <text>$Title</text>
        <group>
            <subgroup>     
                <text hint-style="body" hint-wrap="true" >$Message</text>
				<text hint-style="body" hint-wrap="true" >$Conseil</text>
				<text hint-style="body" hint-wrap="true" >$Button1_Explanation_Text</text>
				<text hint-style="body" hint-wrap="true" >$Button2_Explanation_Text</text>						
            </subgroup>
        </group>
		
		<group>				
			<subgroup>     
							
			</subgroup>				
		</group>		
		
		
    </binding>
    </visual>
  <actions>
        <action arguments="$Good_Pratices_Link" content="$Button1_Text" activationType="protocol" />
        <action arguments="$env:temp\DiskSize_Report.html" content="$Button2_Text" activationType="protocol" />		
   </actions>	
</toast>
"@		
	}
Else
	{

[xml]$Toast = @"
<toast scenario="$Scenario">
    <visual>
    <binding template="ToastGeneric">
        <image placement="hero" src="$HeroImage"/>
        <text placement="attribution">$Attribution</text>
        <text>$Title</text>
        <group>
            <subgroup>     
                <text hint-style="body" hint-wrap="true" >$Message</text>
				<text hint-style="body" hint-wrap="true" >$Conseil</text>
				<text hint-style="body" hint-wrap="true" >$Button2_Explanation_Text</text>					
            </subgroup>
        </group>
		
		<group>				
			<subgroup>     
								
			</subgroup>				
		</group>		
		
		
    </binding>
    </visual>
  <actions>
        <action arguments="$env:temp\DiskSize_Report.html" content="$Button2_Text" activationType="protocol" />		
   </actions>	
</toast>
"@	
	}

$AppID = $Text_AppName
$AppDisplayName = $Text_AppName
Register-NotificationApp -AppID $Text_AppName -AppDisplayName $Text_AppName




# Set the AppID
# $AppID = "Microsoft.CompanyPortal_8wekyb3d8bbwe!App"

# Notification area
# This part allows you to let the notification in the notification area
# $Notifications_Reg = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings'
# If(!(Test-Path -Path "$Notifications_Reg\$AppID")) 
	# {
		# New-Item -Path "$Notifications_Reg\$AppID" -Force
		# New-ItemProperty -Path "$Notifications_Reg\$AppID" -Name 'ShowInActionCenter' -Value 1 -PropertyType 'DWORD'
	# }

# If((Get-ItemProperty -Path "$Notifications_Reg\$AppID" -Name 'ShowInActionCenter' -ErrorAction SilentlyContinue).ShowInActionCenter -ne '1') 
	# {
		# New-ItemProperty -Path "$Notifications_Reg\$AppID" -Name 'ShowInActionCenter' -Value 1 -PropertyType 'DWORD' -Force
	# }


# Toast creation and display
$Load = [Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime]
$Load = [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime]
$ToastXml = New-Object -TypeName Windows.Data.Xml.Dom.XmlDocument
$ToastXml.LoadXml($Toast.OuterXml)	
# Display the Toast
[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier($AppID).Show($ToastXml)

#**************************************************************************************************************************
# 													TOAST NOTIF PART
#**************************************************************************************************************************